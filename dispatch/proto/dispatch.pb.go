// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dispatch.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	dispatch.proto

It has these top-level messages:
	DspMsgReq
	DspMsgResp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type DspMsgReq struct {
	Key       string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Expire    string `protobuf:"bytes,2,opt,name=expire" json:"expire,omitempty"`
	PushUtc   string `protobuf:"bytes,3,opt,name=pushUtc" json:"pushUtc,omitempty"`
	Cert      string `protobuf:"bytes,4,opt,name=cert" json:"cert,omitempty"`
	Platform  string `protobuf:"bytes,5,opt,name=platform" json:"platform,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Msg       string `protobuf:"bytes,7,opt,name=msg" json:"msg,omitempty"`
	PushId    string `protobuf:"bytes,8,opt,name=pushId" json:"pushId,omitempty"`
	Topic     string `protobuf:"bytes,9,opt,name=topic" json:"topic,omitempty"`
	Callback  string `protobuf:"bytes,10,opt,name=callback" json:"callback,omitempty"`
	Code      string `protobuf:"bytes,11,opt,name=code" json:"code,omitempty"`
	LocalAddr string `protobuf:"bytes,12,opt,name=localAddr" json:"localAddr,omitempty"`
}

func (m *DspMsgReq) Reset()                    { *m = DspMsgReq{} }
func (m *DspMsgReq) String() string            { return proto1.CompactTextString(m) }
func (*DspMsgReq) ProtoMessage()               {}
func (*DspMsgReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DspMsgReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DspMsgReq) GetExpire() string {
	if m != nil {
		return m.Expire
	}
	return ""
}

func (m *DspMsgReq) GetPushUtc() string {
	if m != nil {
		return m.PushUtc
	}
	return ""
}

func (m *DspMsgReq) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *DspMsgReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *DspMsgReq) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *DspMsgReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DspMsgReq) GetPushId() string {
	if m != nil {
		return m.PushId
	}
	return ""
}

func (m *DspMsgReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *DspMsgReq) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *DspMsgReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DspMsgReq) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

type DspMsgResp struct {
}

func (m *DspMsgResp) Reset()                    { *m = DspMsgResp{} }
func (m *DspMsgResp) String() string            { return proto1.CompactTextString(m) }
func (*DspMsgResp) ProtoMessage()               {}
func (*DspMsgResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*DspMsgReq)(nil), "proto.DspMsgReq")
	proto1.RegisterType((*DspMsgResp)(nil), "proto.DspMsgResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DispatchService service

type DispatchServiceClient interface {
	DispatchMsg(ctx context.Context, in *DspMsgReq, opts ...grpc.CallOption) (*DspMsgResp, error)
}

type dispatchServiceClient struct {
	cc *grpc.ClientConn
}

func NewDispatchServiceClient(cc *grpc.ClientConn) DispatchServiceClient {
	return &dispatchServiceClient{cc}
}

func (c *dispatchServiceClient) DispatchMsg(ctx context.Context, in *DspMsgReq, opts ...grpc.CallOption) (*DspMsgResp, error) {
	out := new(DspMsgResp)
	err := grpc.Invoke(ctx, "/proto.DispatchService/DispatchMsg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DispatchService service

type DispatchServiceServer interface {
	DispatchMsg(context.Context, *DspMsgReq) (*DspMsgResp, error)
}

func RegisterDispatchServiceServer(s *grpc.Server, srv DispatchServiceServer) {
	s.RegisterService(&_DispatchService_serviceDesc, srv)
}

func _DispatchService_DispatchMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DspMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServiceServer).DispatchMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DispatchService/DispatchMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServiceServer).DispatchMsg(ctx, req.(*DspMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DispatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DispatchService",
	HandlerType: (*DispatchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DispatchMsg",
			Handler:    _DispatchService_DispatchMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dispatch.proto",
}

func init() { proto1.RegisterFile("dispatch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xed, 0xbf, 0x6d, 0x77, 0x5a, 0xb4, 0x0e, 0x22, 0x43, 0xf1, 0x20, 0x7b, 0xf2, 0xd4,
	0x83, 0xfa, 0x02, 0x42, 0x41, 0x3c, 0xf4, 0x52, 0xf1, 0x01, 0xb6, 0x49, 0xdc, 0x5d, 0x9a, 0x35,
	0x31, 0x89, 0xa2, 0xcf, 0xe3, 0x8b, 0x4a, 0x26, 0xbb, 0x15, 0x3c, 0x25, 0xbf, 0xdf, 0x30, 0xcc,
	0xc7, 0x07, 0xa7, 0xb2, 0xf1, 0xb6, 0x0c, 0xa2, 0x5e, 0x5b, 0x67, 0x82, 0xc1, 0x09, 0x3f, 0xc5,
	0xcf, 0x10, 0xf2, 0x8d, 0xb7, 0x5b, 0x5f, 0xed, 0xd4, 0x3b, 0x2e, 0x61, 0x74, 0x50, 0xdf, 0x34,
	0xb8, 0x1e, 0xdc, 0xe4, 0xbb, 0xf8, 0xc5, 0x4b, 0xc8, 0xd4, 0x97, 0x6d, 0x9c, 0xa2, 0x21, 0xcb,
	0x8e, 0x90, 0x60, 0x6a, 0x3f, 0x7c, 0xfd, 0x12, 0x04, 0x8d, 0x78, 0xd0, 0x23, 0x22, 0x8c, 0x85,
	0x72, 0x81, 0xc6, 0xac, 0xf9, 0x8f, 0x2b, 0x98, 0x59, 0x5d, 0x86, 0x57, 0xe3, 0x5a, 0x9a, 0xb0,
	0x3f, 0x32, 0x5e, 0xc0, 0xc4, 0xd6, 0xe6, 0x4d, 0x51, 0xc6, 0x83, 0x04, 0x31, 0x49, 0xeb, 0x2b,
	0x9a, 0xa6, 0x24, 0xad, 0xaf, 0x62, 0x92, 0x78, 0xe2, 0x49, 0xd2, 0x2c, 0x25, 0x49, 0x14, 0xf7,
	0x83, 0xb1, 0x8d, 0xa0, 0x3c, 0xed, 0x33, 0xc4, 0x8b, 0xa2, 0xd4, 0x7a, 0x5f, 0x8a, 0x03, 0x41,
	0xba, 0xd8, 0x33, 0x27, 0x34, 0x52, 0xd1, 0xbc, 0x4b, 0x68, 0xa4, 0xc2, 0x2b, 0xc8, 0xb5, 0x11,
	0xa5, 0x7e, 0x90, 0xd2, 0xd1, 0x82, 0x07, 0x7f, 0xa2, 0x58, 0x00, 0xf4, 0x25, 0x79, 0x7b, 0xfb,
	0x08, 0x67, 0x9b, 0xae, 0xcc, 0x67, 0xe5, 0x3e, 0x1b, 0xa1, 0xf0, 0x1e, 0xe6, 0xbd, 0xda, 0xfa,
	0x0a, 0x97, 0xa9, 0xe4, 0xf5, 0xb1, 0xd9, 0xd5, 0xf9, 0x3f, 0xe3, 0x6d, 0x71, 0xb2, 0xcf, 0xd8,
	0xdd, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xb2, 0x18, 0x22, 0x9c, 0x01, 0x00, 0x00,
}
